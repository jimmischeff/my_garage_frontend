[{"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/index.js":"1","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/App.js":"2","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/reportWebVitals.js":"3","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Display.js":"4","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Form.js":"5","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Dropdown.js":"6","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Tires.js":"7","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/UpgradeForm.js":"8","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/UpgradeTable.js":"9"},{"size":624,"mtime":1607476622767,"results":"10","hashOfConfig":"11"},{"size":3534,"mtime":1607712149349,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607269529088,"results":"13","hashOfConfig":"11"},{"size":1750,"mtime":1607718986188,"results":"14","hashOfConfig":"11"},{"size":3267,"mtime":1607639625857,"results":"15","hashOfConfig":"11"},{"size":854,"mtime":1607476648150,"results":"16","hashOfConfig":"11"},{"size":857,"mtime":1607476643293,"results":"17","hashOfConfig":"11"},{"size":1217,"mtime":1607717896674,"results":"18","hashOfConfig":"11"},{"size":539,"mtime":1607719731734,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6zcvk8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/index.js",[],["42","43"],"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/App.js",["44"],"import './App.css';\nimport React from 'react'\nimport Display from './Display'\nimport VehicleForm from \"./Form\"\nimport UpgradeForm from \"./UpgradeForm\"\nimport { Route, Link, Switch } from \"react-router-dom\"\n\nfunction App() {\n\n  const url = \"http://localhost:3000\"\n  console.log(\"Current base URL is: \", url)\n\n  //state to hold Vehicle API\n  const [vehicle, setVehicle] = React.useState({\n    vehicles: []\n  })\n\n  const [upgrade, setUpgrade] = React.useState({\n    upgrades: []\n  })\n\n  //Function to get API data from URL\n  const getVehicles = () => {\n    fetch(url + \"/vehicles\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      setVehicle(data)\n    })\n  }\n\n  const getUpgrades = () => {\n    fetch(url + \"/upgrades\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      setUpgrade(data)\n    })\n  }\n\n\n  //useEffect to do initial call\n  React.useEffect(() => {\n    getVehicles()\n    getUpgrades()\n  }, [])\n\n  const emptyVehicle = {\n    color: \"\",\n    year: 0,\n    make: \"\",\n    model: \"\",\n    img: \"\"\n  }\n\n  const emptyUpgrade = {\n    name: \"\",\n    price: \"\",\n    url: \"\",\n    vehicle_id: 0\n  }\n\n  //selected state for edit route\n  const [selectedVehicle, setSelectedVehicle] = React.useState(emptyVehicle)\n\n  //function to handle creating new vehicles\n  const handleCreate = (newVehicle) => {\n    fetch(url + \"/vehicles\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newVehicle)\n    }).then(response => {\n      getVehicles()\n    })\n  }\n\n  //create new upgrade\n  const upgradeCreate = (newUpgrade) => {\n    fetch(url + \"/upgrades\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUpgrade)\n    }).then(response => {\n      getUpgrades()\n    })\n  }\n\n  //function to handle updates\n  const handleUpdate = (vehicle) => {\n    fetch(url + \"/vehicles/\" + vehicle.id, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }, body: JSON.stringify(vehicle)\n    }).then(response => getVehicles())\n  }\n\n  //set state when you select vehicle to update\n  const selectVehcile = (vehicle) => {\n    setSelectedVehicle(vehicle)\n  }\n\n  //function to handle delete\n  const deleteVehicle = (vehicle) => {\n    fetch(url + \"/vehicles/\" + vehicle.id, {\n      method: \"delete\"\n    }).then(response => getVehicles())\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>My Garage</h1>\n      <div>\n          <ul id={\"nav\"}>\n            <Link to=\"/\"><li>Home</li></Link>\n            <Link to=\"/create\"><li>Add Vehicle</li></Link>\n            <li>ODB Codes</li>\n            <Link to='/upgrade'><li>Upgrades</li></Link>\n          </ul>\n        </div>\n      <Switch>\n        <Route exact path='/' render={ (rp) => (\n          <Display vehicles = {vehicle} selectVehicle = {selectVehcile}{...rp}\n          deleteVehicle = {deleteVehicle}/>\n        )}/>\n        <Route exact path='/create' render={(rp) => (\n          <VehicleForm {...rp} label='create' vehicle={emptyVehicle} handleSubmit={handleCreate} />\n        )}/>\n\n        <Route exact path='/edit' render={(rp) => (\n          <VehicleForm {...rp} label='update' vehicle={selectedVehicle} handleSubmit={handleUpdate} />\n        )}/>\n\n        <Route exact path='/upgrade' render={(rp) => (\n          <UpgradeForm {...rp} upgrade={emptyUpgrade} handleSubmit={upgradeCreate} />\n        )}/>\n      </Switch>\n        \n\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/reportWebVitals.js",[],"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Display.js",[],"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Form.js",["45"],"import React from \"react\"\nimport { Button, Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap'\n\nconst VehicleForm = (props) => {\n    //Form state\n    const [formData, setFormData] = React.useState(props.vehicle)\n\n    //Functions\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        props.handleSubmit(formData)\n        props.history.push(\"/\")\n    }\n\n    const handleChange = (event) => {\n        setFormData({...formData, [event.target.name]: event.target.value })\n    }\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label for='addVehicle'>Add Vehicle</Label>\n            <Row form>\n                <Col md={2}>\n                    <FormGroup>\n                    <Label>Year:</Label>\n                    <Input \n                    type='number' \n                    name=\"year\" \n                    value={formData.year} \n                    onChange={handleChange}\n                    />\n                    </FormGroup>\n                </Col>\n                <Col md={5}>\n                    <FormGroup>\n                    <Label>Make:</Label>\n                    <Input \n                    type='text' \n                    name=\"make\" \n                    value={formData.make} \n                    onChange={handleChange}\n                    />\n                    </FormGroup>\n                </Col>\n                <Col md={5}>\n                    <FormGroup>\n                    <Label>Model:</Label>\n                    <Input \n                    type='text' \n                    name=\"model\" \n                    value={formData.model} \n                    onChange={handleChange}\n                    />\n                    </FormGroup>\n                </Col>\n            </Row>\n            <Row form>\n                <Col md={4}>\n            <FormGroup>\n                <Label>Color:</Label>\n                <Input \n                type='text' \n                name=\"color\" \n                value={formData.color} \n                onChange={handleChange}\n                />\n            </FormGroup>\n            </Col>\n            <Col md={8}>\n                <Label>Image:</Label>\n                <Input \n                type='text' \n                name=\"img\" \n                value={formData.img} \n                onChange={handleChange}\n                />\n            </Col>\n            </Row>\n            <Label>Oil Information:</Label>\n            <Row>\n            <Col md={4}>\n                <Label>Oil Type:</Label>\n                <Input \n                type='text' \n                name=\"Oil Type\" \n                value={formData.oilType} \n                onChange={handleChange}\n                />\n            </Col>\n            <Col md={4}>\n                <Label>Filter Type:</Label>\n                <Input \n                type='text' \n                name=\"Filter Type\" \n                value={formData.filterType} \n                onChange={handleChange}\n                />\n            </Col>\n            <Col md={4}>\n                <Label>Capacity:</Label>\n                <Input type='text' value={formData.capacity} onChange={handleChange}/>\n            </Col>\n            </Row>\n            <Button>Submit</Button>\n        </Form>\n    )\n}\n\nexport default VehicleForm;","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Dropdown.js",[],"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/Tires.js",[],"/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/UpgradeForm.js",["46","47","48"],"import React from \"react\"\nimport { Button, Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap'\n\nconst UpgradeForm = (props) => {\n//Form state\nconst [formData, setFormData] = React.useState(props.upgrade)\n\n//Functions\nconst handleSubmit = (event) => {\n    event.preventDefault()\n    props.handleSubmit(formData)\n    props.history.push(\"/\")\n}\n\nconst handleChange = (event) => {\n    setFormData({...formData, [event.target.name]: event.target.value })\n}\nreturn(\n    <Form onSubmit={handleSubmit}>\n        <Col md={4}>\n        <Label>Name of Upgrade:</Label>\n        <Input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange}/></Col>\n        <Col md={4}>\n        <Label>Cost of Upgrade:</Label>\n        <Input type=\"integer\" name=\"price\" value={formData.price} onChange={handleChange}/></Col>\n        <Col md={4}>\n        <Label>Part URL:</Label>\n        <Input type=\"text\" name=\"url\" value={formData.url} onChange={handleChange} /></Col>\n        <Col md={4}>\n        <Label>Assign to Vehicle:</Label>\n        <Input type='integer' name='vehicle_id' value={formData.vehicle_id} onChange={handleChange}/></Col>\n        <Button>Submit</Button>\n    </Form>\n\n)}\n\nexport default UpgradeForm","/Users/jimmischeff/Desktop/myGarageApp/my_garage_frontend/src/UpgradeTable.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":18,"column":10,"nodeType":"55","messageId":"56","endLine":18,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":2,"column":49,"nodeType":"55","messageId":"56","endLine":2,"endColumn":57},{"ruleId":"53","severity":1,"message":"58","line":2,"column":24,"nodeType":"55","messageId":"56","endLine":2,"endColumn":33},{"ruleId":"53","severity":1,"message":"57","line":2,"column":49,"nodeType":"55","messageId":"56","endLine":2,"endColumn":57},{"ruleId":"53","severity":1,"message":"59","line":2,"column":59,"nodeType":"55","messageId":"56","endLine":2,"endColumn":62},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'upgrade' is assigned a value but never used.","Identifier","unusedVar","'FormText' is defined but never used.","'FormGroup' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]